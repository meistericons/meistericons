import{appendFileSync as e,readdirSync as a,readFileSync as r}from"node:fs";import s from"node:path";import{fileURLToPath as t}from"node:url";var o=(a,r="react")=>{const t=d(import.meta.url),o=s.resolve(t,`../../../${r}/icons`),n=`export {default as  ${i(a)}} from './${i(a)}';\n`;e(s.resolve(o,"index.ts"),n,"utf-8")},n=(a,r="react")=>{const t=d(import.meta.url),o=s.resolve(t,`../../../${r}/icons`),n=`export {default as  ${i(a)}} from './${i(a)}';\n`;e(s.resolve(o,"index.ts"),n,"utf-8")},l=(a,r="react")=>{const t=d(import.meta.url),o=s.resolve(t,`../../../${r}/icons`),n=`export {default as  ${i(a)}} from './${i(a)}';\n`;e(s.resolve(o,"index.ts"),n,"utf-8")};const c=e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,((e,a,r)=>r?r.toUpperCase():a.toLowerCase())),p=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),i=e=>c(e).charAt(0).toUpperCase()+c(e).slice(1),d=e=>t(new URL(e)),m=e=>a(e).map((e=>e.replace(/.svg/,""))),f=async e=>r(e),u=e=>a(e).reduce(((e,a,r)=>(e[s.basename(a,".svg")]=f(a),e)),{});export{o as generateExportFile,n as generateIconFile,l as generateTypes,d as getCurrentDir,u as readAllMetadata,m as readIconFiles,f as readSvgCode,c as toCamelCase,p as toKebabCase,i as toPascalCase};
