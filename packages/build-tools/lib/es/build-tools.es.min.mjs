import{appendFileSync as e,existsSync as t,mkdirSync as n,writeFileSync as o,readdirSync as r,readFileSync as s}from"node:fs";import a from"node:path";import{fileURLToPath as c}from"node:url";var i=(t,n="react")=>{const o=v(import.meta.url),r=a.resolve(o,`../../../${n}/icons`),s=`export {default as  ${f(t)}} from './${f(t)}';\n`;e(a.resolve(r,"index.ts"),s,"utf-8")},l=(e,r="react")=>{const s=e[0],c=e[1],i=v(import.meta.url),l=a.resolve(i,`../../../${r}/icons`);t(l)||n(l);const p=`\n  import createMeisterIcons from '../src/createMeisterIcons';\n\n  const ${f(s)} = createMeisterIcons("${s}", ${JSON.stringify(c)})\n\n\n  export default ${f(s)}\n  `;o(a.join(l,`${f(s)}.ts`),p,"utf-8")};const p={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor"};var d=(r,s)=>{const c=v(import.meta.url),i=a.resolve(c,`../../../${s}/lib`);let l=s.includes("../")?s.replaceAll("../",""):s;const d=`meistericons-${"react"===l?"react":"vue"===l?"vue":"vue-latest"}.d.ts`;if(!t(i)){n(i);const e=`    ${"react"===l?"import { MeisterIcon } from '../src/createMeisterIcons'":"vue"===l?'import { Component } from "vue"':'import { FunctionalComponent, SVGAttributes } from "vue"'}\n    declare module '@meistericons/${l}'\n    \n    ${"vue-latest"===l?'interface SVGProps extends Partial<SVGAttributes> {\n        size: 24;\n        fill: "currentColor";\n      }\n      \n      export type Icon = (props: SVGProps) => FunctionalComponent<SVGProps>;\n      ':`export interface SVGProps extends Partial<SVGElement> ${JSON.stringify(p,null,2)}\n      \n      export declare type IconNodeChild = readonly [string, object];\n      export declare type IconNode = readonly [tag: string, attrs: SVGProps, children?: IconNodeChild[]];\n      export declare type CustomAttrs = { [attr:string]: any }\n      export type Icons = { [key: string]: IconNode }\n      \n      export interface CreateIconsOptions {\n       \n        icons: Icons;\n      \n        \n        nameAttr?: string;\n      \n        attrs?: CustomAttrs;\n      }\n      \n      export function createElement(icon: IconNode): SVGSVGElement;\n      export function createIcons(options: CreateIconsOptions): void;\n      \n      export declare const icons: Icons;\n      `}\n    // Generated icons\n    `;o(a.resolve(i,d),e,"utf-8")}const m="vue-latest"===l?"Icon;":"Component;";e(a.resolve(i,d),`export declare const ${r}: ${"react"===l?"MeisterIcon;":m}\n`,"utf-8"),console.log(`Added icon type ${r} - @meistericons/${l}`)};const m=e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,((e,t,n)=>n?n.toUpperCase():t.toLowerCase())),u=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),f=e=>m(e).charAt(0).toUpperCase()+m(e).slice(1),v=e=>c(new URL(e)),C=e=>r(e).map((e=>e.replace(/.svg/,""))),x=async e=>s(e),I=e=>r(e).reduce(((e,t,n)=>(e[a.basename(t,".svg")]=x(t),e)),{});export{i as generateExportFile,l as generateIconFile,d as generateTypes,v as getCurrentDir,I as readAllMetadata,C as readIconFiles,x as readSvgCode,m as toCamelCase,u as toKebabCase,f as toPascalCase};
